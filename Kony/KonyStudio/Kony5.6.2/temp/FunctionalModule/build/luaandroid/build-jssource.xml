<?xml version="1.0" encoding="UTF-8"?>
<project name="build-jssource" basedir="."  default="copy-appsrc">
	<taskdef name="escapejssource" classname="com.konylabs.android.anttask.EscapeJavaScriptSourceTask">
		<classpath>
			<pathelement location="extres/EscapeJavaScriptSourceTask.jar"/>
			<pathelement location="extres/commons-lang-2.6.jar"/>
		</classpath>
	</taskdef>
	<taskdef name="encodescript" classname="com.konylabs.android.anttask.EncodeScriptTask">
		<classpath>
			<pathelement location="extres/EncodeScriptTask.jar"/>
			<pathelement location="extres/commons-lang-2.6.jar"/>
		</classpath>
	</taskdef>
	
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	<target name="yuicompress">
		<echo message="/c java -jar extres/yuicompressor-2.4.6.jar ${theFile} -o ${theFile}" />
		<exec-shell executable="cmd" failonerror="true" failifexecutionfails="true" >
			<arg line='/c "java -jar extres/yuicompressor-2.4.6.jar ${theFile} -o ${theFile}"'/>
		</exec-shell>
	</target>
	
	<property name="functional.module.xml.file" value="functionalModules.xml"/>
	<property name="minification.dir" value="${basedir}/minification"/>
	<property name="functionalmodules.dir" value="${basedir}/functionalmodules"/>
	
	<target name="compress">
        <echo>Compressing the android ${appid} application</echo>
		<delete dir="${minification.dir}"/>
		<mkdir dir="${minification.dir}"/>
		<mkdir dir="${minification.dir}/nongenerated"/>
		<mkdir dir="${minification.dir}/generated"/>
		<mkdir dir="${minification.dir}/startup"/>
		<available file="${jssrc.dir}" type="dir" property="jssrc.present"/>
		<if>
			<equals arg1="${jssrc.present}" arg2="true"/>
			<then>
				<copy todir="${minification.dir}/generated" overwrite="true">
					<fileset dir="${jssrc.dir}/generated" includes="*.*"/>
				</copy>
				<copy todir="${minification.dir}/nongenerated" overwrite="true">
					<fileset dir="${jssrc.dir}/nongenerated" includes="**/*.*"/>
				</copy>
				<copy todir="${minification.dir}/startup" overwrite="true">
					<fileset dir="${jssrc.dir}/startup" includes="*.*"/>
				</copy>
				
				<condition property="doMinification">
					<and>
						<equals arg1="${build.option}" arg2="release"/>
						<equals arg1="${minify}" arg2="true"/>
					</and>
				</condition>
				<if>
					<equals arg1="${doMinification}" arg2="true"/>
					<then>
						<foreach target="yuicompress" param="theFile">
							<fileset dir="${minification.dir}/generated" casesensitive="yes">
							</fileset>
						</foreach>
						<foreach target="yuicompress" param="theFile">
							<fileset dir="${minification.dir}/nongenerated" casesensitive="yes" includes="**/*.*">
							</fileset>
						</foreach>
						<foreach target="yuicompress" param="theFile">
							<fileset dir="${minification.dir}/startup" casesensitive="yes">
							</fileset>
						</foreach>
					</then>
				</if>
			</then>
		</if>
    </target>
	
	<target name="copy-appsrc">
		<antcall target="compress"/>
		<delete dir="${assets.dir}/js"/>
		<mkdir dir="${assets.dir}/js"/>
		<antcall target="zip-common-jslibs"/>
		<antcall target="zip-workerthreads"/>
		<antcall target="gen-zip-files"/>
		<if>
			<equals arg1="${secureappsource}" arg2="true"/>
			<then>
				<if>
					<equals arg1="${build.option}" arg2="release"/>
						<then>
							<antcall target="encrypt-zip-files"/>
							<replace file="${app.dir}/src/${packagepath}/${appid}.java" token="$APP_SOURCE_LOC" value="2" />
						</then>
						<else>
							<replace file="${app.dir}/src/${packagepath}/${appid}.java" token="$APP_SOURCE_LOC" value="1" />
						</else>
				</if>
			</then>
			<else>
				<replace file="${app.dir}/src/${packagepath}/${appid}.java" token="$APP_SOURCE_LOC" value="1" />
			</else>
		</if>
		<!-- Create secure source for PAAS license file -->
		<antcall target="copy-PaaS-resources"/>
	</target>
	
	<target name="gen-zip-files">
		<available file="${appfolder}/${outputdir}/functionalmodules/${functional.module.xml.file}" property="hasFuncModules"/>
		<if>
			<equals arg1="${hasFuncModules}" arg2="true"/>
			<then>
				<antcall target="gen-module-zip-files"/>
			</then>
			<else>
				<antcall target="gen-js-zip-files"/>
			</else>
		</if>
	</target>
	
	<target name="zip-workerthreads">
		<available file="${minification.dir}/nongenerated/workerthreads" type="dir" property="workerthreads.dir.present"/>
		<if>
			<equals arg1="${workerthreads.dir.present}" arg2="true"/>
			<then>
				<zip destfile="${assets.dir}/js/workerthreads.kfm">
					<zipfileset dir="${minification.dir}/nongenerated/workerthreads" includes="*.js"/>
				</zip>
			</then>
		</if>
	</target>
	
	<target name="zip-common-jslibs">
		<zip destfile="${assets.dir}/js/common-jslibs.kfm">
			<zipfileset dir="${minification.dir}/nongenerated" includes="konylibrary.js,require.js"/>
		</zip>
	</target>
	
	<target name="gen-module-zip-files">
		<taskdef name="FunctionalModulesXmlParser" classname="com.konylabs.android.anttask.FunctionalModuleXMLParser">
			<classpath>
				<pathelement location="extres/FunctionalModuleXmlParser.jar"/>
			</classpath>
		</taskdef>

		<taskdef name="OrderedZip" classname="OrderedZip">
			<classpath>
				<pathelement location="extres/OrderedZip.jar"/>
			</classpath>
		</taskdef>
		
		<copy todir="${assets.dir}" file="${appfolder}/${outputdir}/functionalmodules/${functional.module.xml.file}"/>
		<delete dir="${functionalmodules.dir}"/>
		<mkdir dir="${functionalmodules.dir}"/>
		<FunctionalModulesXmlParser xmlFile="${assets.dir}/${functional.module.xml.file}" 
			schemaFile="${basedir}/extres/functionalModules.xsd"
			destFile="${functionalmodules.dir}/functionalModules.properties"/>
			
		<property file="${functionalmodules.dir}/functionalModules.properties"/>
		
		<echo message="Modules: ${fm.moduleslist}"/>
		<copy todir="${functionalmodules.dir}">
			<fileset dir="${minification.dir}" includes="**/*.js"/>
		</copy>
		<for list="${fm.moduleslist}" param="module">
			<sequential>
				<if>
					<not>
						<isset property="fm.@{module}.jsModules"/>
					</not>
					<then>
						<property name="fm.@{module}.jsModules" value=""/>
					</then>
				</if>
				<if>
					<not>
						<isset property="fm.@{module}.views"/>
					</not>
					<then>
						<property name="fm.@{module}.views" value=""/>
					</then>
				</if>
				<echo message="zipping ${fm.@{module}.jsModules},${fm.@{module}.views}"/>
				<OrderedZip destfile="${assets.dir}/js/@{module}.kfm"
							basedir="${functionalmodules.dir}"
							includes="${fm.@{module}.jsModules},${fm.@{module}.views}"
							flatten="true"
							ignoreIfNotFound="true"/>
				
			</sequential>	
		</for>
	</target>
	
	<target name="gen-js-zip-files">
		<zip destfile="${assets.dir}/js/startup.js">
			<zipfileset dir="${minification.dir}/nongenerated" includes="*.js" excludes="konylibrary.js,require.js"/>
			<zipfileset dir="${minification.dir}/generated" includes="*.js"/>
			<zipfileset dir="${minification.dir}/startup" includes="*.js"/>
		</zip>
		<condition property="isBiggerCode">
			<length file="${assets.dir}/js/startup.js" when="gt" length="1036288" />
		</condition>
		<if>
			<equals arg1="${isBiggerCode}" arg2="true" />
			<then>
				<move file="${assets.dir}/js/startup.js" tofile="${assets.dir}/js/startup.js.mp3" overwrite="true"/>
			</then>
		</if>
	</target>
	
	<target name="encrypt-zip-files">
		<for param="module">
			<path>
				<fileset dir="${assets.dir}/js" includes="*.kfm,*.js,*.mp3"/>
			</path>
			<sequential>
				<echo message="Encrypting @{module} ..."/>
				<if>
					<equals arg1="${os.family}" arg2="windows"/> 
					<then> 
						<exec-shell executable="cmd" failonerror="true" failifexecutionfails="true" >
							<arg line='/c "${app.dir}/../../extres/kony_loadfile.exe @{module} ${assets.dir}/js/temp.kfm" ${appname} ${packagename} ${currenttime}'/>
						</exec-shell>
					</then> 
					<else> 
						<exec-shell executable="cmd" failonerror="true" failifexecutionfails="true" >
							<arg line='/c "chmod 774 ${app.dir}/../../extres/kony_loadfile"'/>
						</exec-shell>
						<exec-shell executable="cmd" failonerror="true" failifexecutionfails="true" >
							<arg line='/c "${app.dir}/../../extres/kony_loadfile @{module} ${assets.dir}/js/temp.kfm ${appname} ${packagename} ${currenttime}"'/>
						</exec-shell>

					</else>
				</if>
				<move file="${assets.dir}/js/temp.kfm" tofile="@{module}"/>
			</sequential>
		</for>
	</target>
	
	<target name="copy-PaaS-resources">
		<delete dir="${app.dir}/src/com/konylabs/js/appsrc"/>
		<available file="extres/paas/license.js" type="file" property="extres.paas.license"/>
		<if>
    		<equals arg1="${extres.paas.license}" arg2="true"/>
    		<then>
				<loadfile property="appsrc" srcFile="extres/paas/license.js"/>
				<!-- Check if file is empty -->
				<if>
					<equals arg1="${appsrc}" arg2="$${appsrc}"/>
					<then>
						<property name="escjssrc" value=""/>
					</then>
					<else>
						<escapejssource property="escjssrc" appSource="${appsrc}" />
					</else>
				</if>
				<mkdir dir="${app.dir}/src/com/konylabs/js/appsrc" />
				<copy file="extres/JSSourceFileTemplate.java" tofile="${app.dir}/src/com/konylabs/js/appsrc/PaaSLicenseSource.java" overwrite="true" />
				<replace file="${app.dir}/src/com/konylabs/js/appsrc/PaaSLicenseSource.java" token="$SourceFileName" value="PaaSLicenseSource"/>
				<replace file="${app.dir}/src/com/konylabs/js/appsrc/PaaSLicenseSource.java" token="$JSSource" value="${escjssrc}"/>
			</then>
		</if>
	</target>
	
</project>